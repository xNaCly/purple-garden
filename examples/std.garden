; vim: filetype=racket

; @std is a immutable module collection containing helpers and commonly used abstractions

; cli holds interactions for the command line, such as
(@std.cli.args); the list of arguments of the script invocation
(@std.cli.flags); holds all options passed to the runtime as a key value store `pg script.garden -- -t=5 --month=april->{ t=5 month="april" }
(@std.cli.rest); holds all non option arguments as an array

; fmt allows for pretty printing values and to do structured formatting into
; strings
(@let user "teo")
(@std.fmt.printf "hello world: {}[{}]" user (@len user)) ; print to stdout
(@std.fmt.sprintf "hello world: {}[{}]" user (@len user)) ; return as string

; runtime allows for programatic virtual machine interactions
(@std.runtime.gc) ; gc triggers a garbage collection cycle normaly only being triggered by the allocator inside of the vm
(@std.runtime.stats.mem) ; returns memory statistics: {current: int, allocated: int}

; object contains helper functions for streamlined working with objects
(@let obj { key1: (@None), key2: (@None) })
(@std.object.keys obj) ; -> ["key1", "key2"]
(@std.object.values obj) ; -> [Option::None, Option::None]
(@std.object.entries obj) ; -> [["key1", Option::None], ["key2", Option::None]]
